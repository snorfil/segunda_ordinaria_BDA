version: "3.4"
services:
  spark-master:
    build:
      context: .
      dockerfile: ./docker/spark/Dockerfile
    ports:
      - "9090:8080"
      - "7077:7077"
    volumes:
      - ./apps:/opt/spark-apps
      - ./data:/opt/spark-data
    environment:
      - SPARK_LOCAL_IP=spark-master
      - SPARK_WORKLOAD=master

  spark-worker-a:
    build:
      context: .
      dockerfile: ./docker/spark/Dockerfile
    ports:
      - "9091:8080"
      - "7000:7000"
    depends_on:
      - spark-master
    environment:
      - SPARK_MASTER=spark://spark-master:7077
      - SPARK_WORKER_CORES=1
      - SPARK_WORKER_MEMORY=1G
      - SPARK_DRIVER_MEMORY=1G
      - SPARK_EXECUTOR_MEMORY=1G
      - SPARK_WORKLOAD=worker
      - SPARK_LOCAL_IP=spark-worker-a
    volumes:
      - ./apps:/opt/spark-apps
      - ./data:/opt/spark-data

  spark-worker-b:
    build:
      context: .
      dockerfile: ./docker/spark/Dockerfile
    ports:
      - "9095:8080"
      - "7001:7000"
    depends_on:
      - spark-master
    environment:
      - SPARK_MASTER=spark://spark-master:7077
      - SPARK_WORKER_CORES=1
      - SPARK_WORKER_MEMORY=1G
      - SPARK_DRIVER_MEMORY=1G
      - SPARK_EXECUTOR_MEMORY=1G
      - SPARK_WORKLOAD=worker
      - SPARK_LOCAL_IP=spark-worker-b
    volumes:
      - ./apps:/opt/spark-apps
      - ./data:/opt/spark-data
  neo4jBDA:
    image: neo4j
    container_name: neo4jBDA
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - ./neo4jVolume:/data
  database:
    image: postgres:16.2-alpine
    ports:
      - "9999:5432"
    environment:
      - POSTGRES_PASSWORD=bdaPrimOrd
      - POSTGRES_USER=primOrd
      - POSTGRES_DB=PrimOrd
    volumes:
      - ./postgres_data:/var/lib/postgresql/data

  kafka:
    image: wurstmeister/kafka:latest
    hostname: kafka
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://kafka:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_CREATE_TOPICS: "sales_stream:1:1"
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper

  zookeeper:
    image: wurstmeister/zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"

  localstack:
    image: localstack/localstack
    ports:
      - "127.0.0.1:4566:4566" # LocalStack Gateway
      - "127.0.0.1:4510-4559:4510-4559" # external services port range
    environment:
      - DEBUG=${DEBUG:-0}
    volumes:
      - ./localstackVolume:/var/lib/localstack
      - /var/run/docker.sock:/var/run/docker.sock
  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongodb_volumen:/data/db
volumes:
  localstackVolume: {}
  postgres_data: {}
  neo4jVolume: {}
  mongodb_volumen: {}

